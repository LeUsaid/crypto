
import java.util.Scanner;
public class RailFenceCipher {
    public static String encrypt(String text, int rails) {
        char[][] matrix = new char[rails][text.length()];
        boolean down = true;
        int row = 0;
        for (int i = 0; i < text.length(); i++) {
            matrix[row][i] = text.charAt(i);
            if (row == 0) {
                down = true;
            } else if (row == rails - 1) {
                down = false;
            }
            row += down ? 1 : -1;
        }
        StringBuilder result = new StringBuilder();
        for (int i = 0; i < rails; i++) {
            for (int j = 0; j < text.length(); j++) {
                if (matrix[i][j] != '\0') {
                    result.append(matrix[i][j]);
                }
            }
        }
        return result.toString();
    }
    public static String decrypt(String cipher, int rails) {
        char[][] matrix = new char[rails][cipher.length()];
        int row = 0;
        boolean down = true;
        int col = 0;
        for (int i = 0; i < cipher.length(); i++) {
            matrix[row][col++] = '*';
            if (row == 0) {
                down = true;
            } else if (row == rails - 1) {
                down = false;
            }
            row += down ? 1 : -1;
        }
        int index = 0;
        for (int i = 0; i < rails; i++) {
            for (int j = 0; j < cipher.length(); j++) {
                if (matrix[i][j] == '*' && index < cipher.length()) {
                    matrix[i][j] = cipher.charAt(index++);
                }
            }
        }
        StringBuilder result = new StringBuilder();
        row = 0;
        down = true;
        col = 0;
        for (int i = 0; i < cipher.length(); i++) {
            result.append(matrix[row][col++]);
            if (row == 0) {
                down = true;
            } else if (row == rails - 1) {
                down = false;
            }
            row += down ? 1 : -1;
        }
        return result.toString();
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the text: ");
        String text = scanner.nextLine();
        System.out.print("Enter the number of rails: ");
        int rails = scanner.nextInt();
        String encryptedText = encrypt(text, rails);
        System.out.println("Encrypted text: " + encryptedText);
        String decryptedText = decrypt(encryptedText, rails);
        System.out.println("Decrypted text: " + decryptedText);
        scanner.close();
    }
}
