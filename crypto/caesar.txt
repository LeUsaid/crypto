import java.util.Scanner;
public class CaesarCipher {
    public static final String ALPHABET = "abcdefghijklmnopqrstuvwxyz";
    public static String encrypt(String plainText, int shiftKey) {
        plainText = plainText.toLowerCase();
        String cipherText = "";
               for (int i = 0; i < plainText.length(); i++) {
            char currentChar = plainText.charAt(i);
            int charPosition = ALPHABET.indexOf(currentChar);
                        if (charPosition != -1) { // Check if the character is in the alphabet
                int keyVal = (shiftKey + charPosition) % 26;
                char replaceVal = ALPHABET.charAt(keyVal);
                cipherText += replaceVal;
            } else {
                cipherText += currentChar; // Keep non-alphabet characters unchanged
            }
        }
                return cipherText;
    }
    public static String decrypt(String cipherText, int shiftKey) {
        cipherText = cipherText.toLowerCase();
        String plainText = "";
                for (int i = 0; i < cipherText.length(); i++) {
            char currentChar = cipherText.charAt(i);
            int charPosition = ALPHABET.indexOf(currentChar);
                        if (charPosition != -1) { // Check if the character is in the alphabet
                int keyVal = (charPosition - shiftKey) % 26;
                if (keyVal < 0) {
                    keyVal += ALPHABET.length(); // Handle negative key value
                }
                char replaceVal = ALPHABET.charAt(keyVal);
                plainText += replaceVal;
            } else {
                plainText += currentChar; // Keep non-alphabet characters unchanged
            }
        }
                return plainText;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the Plain text for Encryption: ");
        String message = sc.nextLine(); // Use nextLine() to capture spaces
        int shiftKey = 3; // You can make this dynamic if needed
                String encryptedMessage = encrypt(message, shiftKey);
        System.out.println("Encrypted message: Cipher Text = " + encryptedMessage);
                String decryptedMessage = decrypt(encryptedMessage, shiftKey);
        System.out.println("Decrypted message: Plain Text = " + decryptedMessage);
                sc.close();
    }
}
